---
import Logo from '../components/Logo.astro';
---

<header 
	id="mainHeader"
	class="
		w-full 
		flex items-center 
		fixed top-0 
		py-3 px-10
		z-40
	"
>
	<div class="flex flex-1">
		<Logo />
	</div>

	<nav>
			<ul 
				class="
					flex 
					[&>li>a]:inline-block
					[&>li>a]:px-4 [&>li>a]:py-2 
					text-sm
					[&>li>a]:font-medium
					[&>li>a]:text-current
					[&>li>a]:transition-colors 
					[&>li>a]:duration-200
				"
			>
					<li>
							<a href="#">Model S</a>
					</li>
					<li>
							<a href="#">Model 3</a>
					</li>
					<li>
							<a href="#">Model X</a>
					</li>
					<li>
							<a href="#">Model Y</a>
					</li>
					<li>
							<a href="#">Solar Roof</a>
					</li>
					<li>
							<a href="#">Solar Panels</a>
					</li>
					<li>
							<a href="#">Powerwall</a>
					</li>
			</ul>
	</nav>

	<nav class="flex flex-1 justify-end">
			<ul class="
						flex 
						[&>li>a]:inline-block
						[&>li>a]:px-4 [&>li>a]:py-2 
						text-sm
						[&>li>a]:font-medium
						[&>li>a]:text-current
						[&>li>a]:transition-colors 
						[&>li>a]:duration-200
					"
			>
					<li>
							<a href="#">Shop</a>
					</li>
					<li>
							<a href="#">Account</a>
					</li>
					<li>
							<a href="#">Menu</a>
					</li>
			</ul>
	</nav>

	<div id="menuBackdrop" 
		class="
			w-[var(--width)] h-[var(--height)]
			absolute left-0 top-0
			translate-x-[var(--left)] translate-y-[var(--top)]
			bg-black/5 backdrop-blur-lg 
			rounded
			transition-all duration-300
			ease-in-out
			opacity-0
			-z-10
		"
	>
	</div>
</header>

<script>
	const listItem = document.querySelectorAll("#mainHeader li");
	const menuBackdrop = document.querySelector("#menuBackdrop") as HTMLElement ;

	listItem.forEach(item => {
		item.addEventListener("mouseenter", () => {
			const { left, top, width, height } = item.getBoundingClientRect();

			menuBackdrop.style.setProperty("--left", `${left}px`);
			menuBackdrop.style.setProperty("--top", `${top}px`);
			menuBackdrop.style.setProperty("--width", `${width}px`);
			menuBackdrop.style.setProperty("--height", `${height}px`);
			menuBackdrop.style.opacity = "1";
		});

		item.addEventListener("mouseleave", () => {
			menuBackdrop.style.opacity = "0";
		});
	});
</script>


<script>
	const header = document.querySelector("#mainHeader") as HTMLElement;

	const observerOptions =  {
		root: null, // For viewport
		rootMargin: "0px", // When element is being observed
		threshold: 0.90 // Visibility
	}

	const observer = new IntersectionObserver(entries => {
		entries.forEach(entry => {
			const { isIntersecting } = entry;

			if (isIntersecting) {
				const color = entry.target.getAttribute("data-header-color");
				header.style.color = color;
			}
		})
	}, observerOptions);

	const sections = document.querySelectorAll(".landing-section");

	sections.forEach(section => observer.observe(section));
</script>